{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/spinner/Spinner.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","resources/img/UW.png","resources/img/x-men.png","pages/ComicsPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","exact","activeStyle","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","useState","loading","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_transformComics","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","price","prices","View","includes","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","MainPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","comicsItem","ComicsPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83197ab9.chunk.js","sourcesContent":["import './appHeader.scss';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n                <h1 className=\"app__title\">\r\n                <Link to=\"/\">\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink exact activeStyle={{'color':'#9f0013'}} to=\"/\">Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink exact activeStyle={{'color':'#9f0013'}} to=\"/comics\">Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error)\r\n        console.log(errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <ErrorMessage/>\r\n            )\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError} = useHttp()\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\r\n    // const _apiKey = '44f492ed0c3d9f00338ecc47f837d4c4';\r\n\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (char) => {\r\n        // return char\r\n        return {\r\n            id: char.id,\r\n            title: char.title,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            price: `${char.prices[0].price} $`,\r\n            url: char.urls[0].url\r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics}\r\n}\r\n\r\nexport default useMarvelService;","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (\r\n        url,\r\n        method = 'GET',\r\n        body = null,\r\n        headers = {'Content-Type': 'application/json'}\r\n    ) => {\r\n\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers})\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            setLoading(false)\r\n            return data\r\n\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useEffect, useState} from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        // const timerId = setInterval(updateChar, 1000);\r\n        //\r\n        // return () => {\r\n        //     clearInterval(timerId)\r\n        // }\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError()\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\r\n        getCharacter(id)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button onClick={updateChar} className=\"button button__main\">\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img style={{objectFit: thumbnail.includes('image_not_available') ? 'contain' : 'cover'}} src={thumbnail}\r\n                 alt=\"Random character\" className=\"randomchar__img\"/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\nimport PropTypes from \"prop-types\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nconst CharList = (props) => {\r\n\r\n    //test\r\n    const [charList, setCharList] = useState([])\r\n    const [newItemLoading, setNewItemLoading] = useState(false)\r\n    const [offset, setOffset] = useState(1548)\r\n    const [charEnded, setCharEnded] = useState(false)\r\n\r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset,true)\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\r\n\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        // charEnded\r\n        let ended = false\r\n        if (newCharList.length < 9) {\r\n            ended = true\r\n        }\r\n        setCharList(charList => [...charList, ...newCharList])\r\n        setNewItemLoading(false)\r\n        setOffset(offset => offset + 9)\r\n        setCharEnded(ended)\r\n    }\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    // Этот метод создан для оптимизации,\r\n    // чтобы не помещать такую конструкцию в метод render\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {'objectFit': 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit': 'unset'};\r\n            }\r\n\r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id)\r\n                        focusOnItem(i)\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        // А эта конструкция вынесена для центровки спиннера/ошибки\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    // const content = !(loading || error) ? items : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                onClick={() => onRequest(offset)}\r\n                style={{'display': charEnded ? 'none' : 'block'}}\r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport './charInfo.scss';\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null)\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [props.charId])\r\n\r\n\r\n    const updateChar = () => {\r\n        clearError()\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char)\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit': 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit': 'contain'};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return;\r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\nimport decoration from \"../resources/img/vision.png\";\r\nimport {useState} from \"react\";\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null)\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\nexport default MainPage","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import './comicsList.scss';\r\nimport uw from '../../resources/img/UW.png';\r\nimport xMen from '../../resources/img/x-men.png';\r\nimport {useEffect, useState} from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map((comicsItem, i) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <a href={comicsItem.url}>\r\n                        <img src={comicsItem.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{comicsItem.title}</div>\r\n                        <div className=\"comics__item-price\">{comicsItem.price}</div>\r\n                    </a>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                disabled={newItemLoading}\r\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","import AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ComicsPage","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport {ComicsPage, MainPage} from \"../../pages\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <MainPage/>\r\n                        </Route>\r\n                        <Route exact path=\"/comics\">\r\n                            <ComicsPage/>\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}